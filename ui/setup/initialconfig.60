import {Button, LineEdit, StandardListView} from "./sixtyfps_widgets.60";

export SetupWindow := Window {
    property <int> current-stage: 1;
    property <bool> isLinux: true;
    property <int> selectedTheme: 0; // 1 - light, 2 - dark, 3 - system
    property <string> gameScanPath: "";
    property <string> selectedThemeText: "";
    property<[StandardListViewItem]> foundGameList: [];
    callback openFileDialog;
    callback finish;
    callback writeOutConfig;
    title: "Totem Setup";
    min-height: 400px;
    min-width: 600px;
    Rectangle {
        x: (current-stage - 3) * parent.width * -1;
        animate x {duration: 125ms; easing: ease;}
        Text {
            x: parent.width / 2 - width / 2;
            y: parent.height * 0.1;
            horizontal-alignment: center;
            text: "That's all for now. I hope you enjoy Totem!";
        }
        Button {
            x: parent.width - width;
            y: parent.height - height;
            width: 60px;
            height: 25px;
            text: "Finish";
            clicked => {
                root.finish();
            }
        }
    }
    Rectangle {
        x: (current-stage - 2) * parent.width * -1;
        animate x {duration: 125ms; easing: ease;}
        Text {
            x: parent.width / 2 - width / 2;
            y: parent.height * 0.1;
            horizontal-alignment: center;
            text: isLinux ? "Next, choose a folder to auto-search for games.\nGames will be added automagically if their root folder contains a start.sh file." : "Next, choose a folder to auto-search for games.\nGames will be added automagically if their root folder contains only one .exe file.";
        }
        windowsText := Text {
            x: parent.width / 2 - width / 2;
            y: parent.height * 0.1 + height * 2;
            visible: !isLinux;
            text: "(This excludes unins*.exe, UnityCrashHandler*.exe, and vcredist*.exe)";
        }
        scanDirEntryBox := LineEdit {
            x: parent.width / 2 - width / 2;
            y: isLinux ? parent.height * 0.25 : parent.height * 0.25 + windowsText.height;
            width: parent.width * 0.8;
            height: 35px;
            text <=> root.gameScanPath;
            Button {
                x: parent.width - width;
                height: parent.height;
                width: 80px;
                text: "Browse!";
                clicked => {
                    root.openFileDialog();
                }
            }
        }
        Button {
            x: parent.width - width;
            y: parent.height - height;
            width: 60px;
            height: 25px;
            text: root.gameScanPath == "" ? "Skip" : "Next";
            clicked => {
                root.writeOutConfig();
                current-stage = 3;
            }
        }
        foundGameListView := StandardListView {
            x: scanDirEntryBox.x;
            width: scanDirEntryBox.width;
            height: parent.height - (scanDirEntryBox.height + y);
            y: scanDirEntryBox.y + scanDirEntryBox.height + 10px;
            model: foundGameList;
        }
        
    }
    // theme selection page
    Rectangle {
        x: (current-stage - 1) * parent.width * -1;
        animate x {duration: 125ms; easing: ease;}
        Text {
            x: parent.width / 2 - width / 2;
            y: parent.height * 0.1;
            text: "Hello, and welcome to the Totem Setup!";
        }
        Text {
            x: parent.width / 2 - width / 2;
            y: parent.height * 0.1 + height;
            text: "To start off, pick a theme. This will be applied on next launch.";
        }
        Text {
            x: parent.width / 2 - width / 2;
            y: parent.height * 0.1 + height * 2;
            text: selectedThemeText;
        }
        Button {
            width: parent.width / 4;
            height: parent.height / 4;
            x: parent.width / 6;
            y: parent.height / 4;
            // border-width: selectedTheme == 1 ? 7px : 1px;
            // border-color: #6495ED;
            clicked => {
                selectedTheme = 1;
                selectedThemeText = "Selected Theme: Fluent Light";
            }
            Text {
                text: "Fluent Light";
                x: parent.width / 2 - width / 2;
                y: parent.height + height / 1.5;
            }
        }

        Button {
            width: parent.width / 4;
            height: parent.height / 4;
            x: parent.width * (5/6) - width;
            y: parent.height / 4;
            // border-width: selectedTheme == 2 ? 7px : 1px;
            // border-color: #6495ED;
            clicked => {
                selectedTheme = 2;
                selectedThemeText = "Selected Theme: Fluent Dark";

            }
            Text {
                text: "Fluent Dark";
                x: parent.width / 2 - width / 2;
                y: parent.height + height / 1.5;
            }
        }
        
        Button {
            width: parent.width / 4;
            height: parent.height / 4;
            x: parent.width / 2 - width / 2;
            y: parent.height * 0.6;
            // border-width: selectedTheme == 3 ? 7px : 1px;
            // border-color: #6495ED;
            clicked => {
                selectedTheme = 3;
                selectedThemeText = "Selected Theme: System";
            }
            Text {
                text: "System Widgets";
                x: parent.width / 2 - width / 2;
                y: parent.height + height / 1.5;
            }
        }
        
        Button {
            x: parent.width - width;
            y: parent.height - height;
            width: 60px;
            height: 25px;
            text: "Next";
            visible: selectedTheme == 0 ? false : true;
            clicked => {
                current-stage = 2;
            }
        }
    }
}